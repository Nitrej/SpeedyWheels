@using Microsoft.AspNetCore.Identity
@using SpeedyWheels.Areas.Identity.Data

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject RentalDataContext _rentalDataContext

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
<li class="nav-item">
            @{
                var userId = UserManager.GetUserId(User);
                var client = _rentalDataContext.Clients.FirstOrDefault(c => c.UserId == userId);
                var name = $"{client?.Name} {client?.Surname}" ?? UserManager.GetUserName(User);
                if (client?.Name == "EMPTY" || client?.Surname == "EMPTY") { name = UserManager.GetUserName(User); }
            }
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Witaj @name!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    @*<li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>*@
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
